{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\palntilla\\\\web-dev-projects\\\\personal-portfolio\\\\src\\\\context\\\\TaskContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { createTaskRequest, deleteTaskRequest, getTasksRequest, getTaskRequest, updateTaskRequest } from \"../api/tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nexport const useTasks = () => {\n  _s();\n\n  const context = useContext(TaskContext);\n  if (!context) throw new Error(\"useTasks must be used within a TaskProvider\");\n  return context;\n};\n\n_s(useTasks, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function TaskProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n\n  const getTasks = async () => {\n    const res = await getTasksRequest();\n    console.log(res);\n  };\n\n  const deleteTask = async id => {\n    try {\n      const res = await deleteTaskRequest(id);\n      if (res.status === 204) setTasks(tasks.filter(task => task._id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createTask = async task => {\n    try {\n      const res = await createTaskRequest(task);\n      console.log(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getTask = async id => {\n    try {\n      const res = await getTaskRequest(id);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateTask = async (id, task) => {\n    try {\n      await updateTaskRequest(id, task);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      getTasks,\n      deleteTask,\n      createTask,\n      getTask,\n      updateTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TaskProvider, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = TaskProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useContext","useState","createTaskRequest","deleteTaskRequest","getTasksRequest","getTaskRequest","updateTaskRequest","TaskContext","useTasks","context","Error","TaskProvider","children","tasks","setTasks","getTasks","res","console","log","deleteTask","id","status","filter","task","_id","error","createTask","data","getTask","updateTask"],"sources":["C:/Users/Gabriel/Desktop/palntilla/web-dev-projects/personal-portfolio/src/context/TaskContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport {\r\n  createTaskRequest,\r\n  deleteTaskRequest,\r\n  getTasksRequest,\r\n  getTaskRequest,\r\n  updateTaskRequest,\r\n} from \"../api/tasks\";\r\n\r\nconst TaskContext = createContext();\r\n\r\nexport const useTasks = () => {\r\n  const context = useContext(TaskContext);\r\n  if (!context) throw new Error(\"useTasks must be used within a TaskProvider\");\r\n  return context;\r\n};\r\n\r\nexport function TaskProvider({ children }) {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const getTasks = async () => {\r\n    const res = await getTasksRequest();\r\n    console.log(res)\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const res = await deleteTaskRequest(id);\r\n      if (res.status === 204) setTasks(tasks.filter((task) => task._id !== id));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createTask = async (task) => {\r\n    try {\r\n      const res = await createTaskRequest(task);\r\n      console.log(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getTask = async (id) => {\r\n    try {\r\n      const res = await getTaskRequest(id);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const updateTask = async (id, task) => {\r\n    try {\r\n      await updateTaskRequest(id, task);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        tasks,\r\n        getTasks,\r\n        deleteTask,\r\n        createTask,\r\n        getTask,\r\n        updateTask,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,iBALF,QAMO,cANP;;AAQA,MAAMC,WAAW,gBAAGR,aAAa,EAAjC;AAEA,OAAO,MAAMS,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAMC,OAAO,GAAGT,UAAU,CAACO,WAAD,CAA1B;EACA,IAAI,CAACE,OAAL,EAAc,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;EACd,OAAOD,OAAP;AACD,CAJM;;GAAMD,Q;;AAMb,OAAO,SAASG,YAAT,OAAoC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMc,QAAQ,GAAG,YAAY;IAC3B,MAAMC,GAAG,GAAG,MAAMZ,eAAe,EAAjC;IACAa,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CAHD;;EAKA,MAAMG,UAAU,GAAG,MAAOC,EAAP,IAAc;IAC/B,IAAI;MACF,MAAMJ,GAAG,GAAG,MAAMb,iBAAiB,CAACiB,EAAD,CAAnC;MACA,IAAIJ,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwBP,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,EAApC,CAAD,CAAR;IACzB,CAHD,CAGE,OAAOK,KAAP,EAAc;MACdR,OAAO,CAACC,GAAR,CAAYO,KAAZ;IACD;EACF,CAPD;;EASA,MAAMC,UAAU,GAAG,MAAOH,IAAP,IAAgB;IACjC,IAAI;MACF,MAAMP,GAAG,GAAG,MAAMd,iBAAiB,CAACqB,IAAD,CAAnC;MACAN,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACW,IAAhB;IACD,CAHD,CAGE,OAAOF,KAAP,EAAc;MACdR,OAAO,CAACC,GAAR,CAAYO,KAAZ;IACD;EACF,CAPD;;EASA,MAAMG,OAAO,GAAG,MAAOR,EAAP,IAAc;IAC5B,IAAI;MACF,MAAMJ,GAAG,GAAG,MAAMX,cAAc,CAACe,EAAD,CAAhC;MACA,OAAOJ,GAAG,CAACW,IAAX;IACD,CAHD,CAGE,OAAOF,KAAP,EAAc;MACdR,OAAO,CAACQ,KAAR,CAAcA,KAAd;IACD;EACF,CAPD;;EASA,MAAMI,UAAU,GAAG,OAAOT,EAAP,EAAWG,IAAX,KAAoB;IACrC,IAAI;MACF,MAAMjB,iBAAiB,CAACc,EAAD,EAAKG,IAAL,CAAvB;IACD,CAFD,CAEE,OAAOE,KAAP,EAAc;MACdR,OAAO,CAACQ,KAAR,CAAcA,KAAd;IACD;EACF,CAND;;EAQA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLZ,KADK;MAELE,QAFK;MAGLI,UAHK;MAILO,UAJK;MAKLE,OALK;MAMLC;IANK,CADT;IAAA,UAUGjB;EAVH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;IAzDeD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}